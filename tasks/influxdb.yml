---
- name: influxdb - checking ressource access
  become: false
  uri:
    url: "{{ influxdb_repo_key }}"
  register: influxdb_http_response
  ignore_errors: true

- name: influxdb - add repository
  yum_repository:
    name: influxdb
    description: influxdb
    baseurl: "{{ influxdb_repo }}"
    gpgcheck: yes
    gpgkey: "{{ influxdb_repo_key }}"
  when: influxdb_http_response.status == 200

- command: rpm --import "{{ influxdb_local_key }}"
  args:
    warn: false
  register: rpm_install
  failed_when: rpm_install.rc != 0 and "is already installed" not in rpm_install.stderr
  changed_when: rpm_install.rc == 0
  when: influxdb_http_response.status != 200

- name: install influxdb rpm from a local file
  yum:
    name: "{{ influxdb_rpm }}"
    state: present
  when: influxdb_http_response.status != 200

- name: influxdb - import rpm key
  rpm_key:
    key: "{{ influxdb_repo_key }}"
    state: present
  when: influxdb_http_response.status == 200

- name: influxdb - install packages
  package:
    name: "{{ item }}"
    state: latest
  with_items:
  - "{{ influxdb_packages }}"
  retries: 5
  delay: 2
  when: influxdb_http_response.status == 200

- name: influxdb - modify configuration
  ini_file:
    path: "{{ influxdb_config }}"
    section: "{{item.section}}"
    option: "  {{item.option}}"
    value: "{{item.value}}"
  with_items:
    - { section: http, option: bind-address, value: '"127.0.0.1:8086"' }
    - { section: http, option: log-enabled, value: "false" }
    - { section: logging, option: level, value: '"error"' }
  notify: restart influxdb

- name: influxdb - ensure backup folder exists
  file:
    path: "{{ influxdb_backup_dir }}"
    state: directory
    owner: root
    group: root

- name: influxdb - copy cron backup
  template:
    src: "influxdb/influxdb.cron.j2"
    dest: "/etc/cron.d/influxdb"
    owner: root
    group: root
    mode: 0644

- name: influxdb - enable service
  systemd:
    name: influxdb
    state: started
    enabled: yes
    daemon_reload: yes
