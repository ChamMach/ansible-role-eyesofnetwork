---
# task mod_gearman

- name: disable selinux
  selinux:
    state: disabled
  when: "'mod_gearman_worker' in group_names"

- name: install the 'mod_gearman_worker' repos
  yum:
    name: "{{ item }}"
    state: present
  with_items:
    - epel-release
    - https://download.eyesofnetwork.com/repos/{{version}}/base/eyesofnetwork-release-{{version}}-{{release}}.noarch.rpm
    - https://labs.consol.de/repo/stable/rhel7/i386/labs-consol-stable.rhel7.noarch.rpm
  when: "'mod_gearman_worker' in group_names"

- name: install the 'mod_gearman_worker' packages
  yum:
    name: "{{ item }}"
    state: present
  with_items:
    - nagios-plugins-all
    - nagios-plugins-eon
    - perl-Nagios-Plugin
    - perl-Net-SNMP
  when: "'mod_gearman_worker' in group_names"

- name: install 'mod_gearman' packages
  yum:
    name: "{{ item }}"
    state: present
  with_items:
    - gearmand
    - gearmand-server
    - mod_gearman

- name: disable gearmand-server on worker
  service:
    name: gearmand
    enabled: no
    state: stopped
  when: "'mod_gearman_worker' in group_names"

- name: copy secret file to each nodes
  template:
    src: mod_gearman/secret.file.j2
    dest: "{{ mod_gearman_key_path }}"
    owner: root
    group: root
    mode: 0644

- name: generate template server to server node
  template:
    src: mod_gearman/module.conf.j2
    dest: /etc/mod_gearman/module.conf
    owner: root
    group: root
    mode: 0644
  when: "'mod_gearman_server' in group_names"

- name: generate template worker to worker node
  template:
    src: mod_gearman/worker.conf.j2
    dest: /etc/mod_gearman/worker.conf
    owner: root
    group: root
    mode: 0644

- name: restart mod-gearman-worker on each nodes
  service:
    name: mod-gearman-worker
    enabled: yes
    state: restarted

- name: stop gearmand on server
  service:
    name: gearmand
    state: stopped
  when: "'mod_gearman_server' in group_names"

- name: delete retention file on server
  file:
    path: /tmp/gearmand.retention
    state: absent
  when: "'mod_gearman_server' in group_names"

- name: restart gearmand on server
  service:
    name: gearmand
    enabled: yes
    state: restarted
  when: "'mod_gearman_server' in group_names"

- name: use eonapi to add broker
  uri:
    url: "{{api_url}}/addEventBroker?username={{api_user}}&apiKey={{api_token}}"
    method: POST
    headers:
      Content-Type: "application/json"
    body: '{ "broker" : "{{ mod_gearman_broker }}", "exportConfiguration": true }'
    body_format: json
    return_content: yes
    validate_certs: no
  register: return
  when: "'mod_gearman_server' in group_names"

- name : display result
  debug:
    msg: "{{ return.content }}"
  when: "'mod_gearman_server' in group_names"

- name: Fail if ERROR in the page content
  fail:
  when: "'mod_gearman_server' in group_names and 'ERROR' in return.content"
